{"ast":null,"code":"var _jsxFileName = \"/Users/davi/Documents/projects/codewars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const initialState = {\n    optionArray: ['Detect Pangram', 'Detect Pangram 2'],\n    currentComponent: 'Detect Pangram'\n  };\n  const [state, setState] = useState(initialState);\n  useEffect(() => console.log(state), [state]);\n\n  const onChangeHandle = () => {};\n\n  let currentComponent;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChangeHandle,\n      value: state.currentComponent,\n      children: state.optionArray.map((el, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: [\" \", el, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), currentComponent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g9yWDQF6ixWa1r5sfsm7YAeGJG4=\");\n\n_c = App;\nexport default App;\n{\n  /* <label className='AddNewEmployeeWrapper_label'>\n   name:\n   <input\n     className='AddNewEmployeeWrapper_input'\n     type=\"text\"\n     name='name'\n     value={employeeInfo.name}\n     placeholder='name'\n     onChange={handleChange}\n   />\n  </label> */\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davi/Documents/projects/codewars/src/App.js"],"names":["useEffect","useState","App","initialState","optionArray","currentComponent","state","setState","console","log","onChangeHandle","map","el","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,YAAY,GAAG;AACnBC,IAAAA,WAAW,EAAE,CACX,gBADW,EAEX,kBAFW,CADM;AAKnBC,IAAAA,gBAAgB,EAAE;AALC,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACE,YAAD,CAAlC;AAEAH,EAAAA,SAAS,CAAC,MAAMQ,OAAO,CAACC,GAAR,CAAYH,KAAZ,CAAP,EAA2B,CAACA,KAAD,CAA3B,CAAT;;AAEA,QAAMI,cAAc,GAAG,MAAM,CAE5B,CAFD;;AAMA,MAAIL,gBAAJ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE;AACE,MAAA,QAAQ,EAAEK,cADZ;AAEE,MAAA,KAAK,EAAEJ,KAAK,CAACD,gBAFf;AAAA,gBAIGC,KAAK,CAACF,WAAN,CAAkBO,GAAlB,CAAsB,CAACC,EAAD,EAAKC,KAAL,kBAAe;AAAA,wBAAuBD,EAAvB;AAAA,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cAArC;AAJH;AAAA;AAAA;AAAA;AAAA,YADF,EAOGR,gBAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhCQH,G;;KAAAA,G;AAkCT,eAAeA,GAAf;AAGA;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAY","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const initialState = {\n    optionArray: [\n      'Detect Pangram',\n      'Detect Pangram 2',\n    ],\n    currentComponent: 'Detect Pangram'\n  };\n\n  const [state, setState] = useState(initialState);\n\n  useEffect(() => console.log(state), [state]);\n\n  const onChangeHandle = () => {\n\n  }\n\n\n\n  let currentComponent;\n\n  return (\n    <div className='appWrapper'>\n      <select\n        onChange={onChangeHandle}\n        value={state.currentComponent}\n      >\n        {state.optionArray.map((el, index) => <option key={index} > {el} </option>)}\n      </select>\n      {currentComponent}\n    </div>\n  );\n}\n\nexport default App;\n\n\n{/* <label className='AddNewEmployeeWrapper_label'>\n  name:\n  <input\n    className='AddNewEmployeeWrapper_input'\n    type=\"text\"\n    name='name'\n    value={employeeInfo.name}\n    placeholder='name'\n    onChange={handleChange}\n  />\n</label> */}"]},"metadata":{},"sourceType":"module"}