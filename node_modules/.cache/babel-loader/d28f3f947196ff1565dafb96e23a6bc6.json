{"ast":null,"code":"var _jsxFileName = \"/Users/davi/Documents/projects/codewars/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport DetectPangram from './components/DetectPangram/DetectPangram';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const initialState = {\n    optionArray: ['Detect Pangram', 'Detect Pangram 2'],\n    currentComponent: 'Detect Pangram'\n  };\n  const [state, setState] = useState(initialState); // useEffect(() => console.log(state), [state]);\n\n  const onChangeHandle = eve => {\n    setState(prevState => {\n      return { ...prevState,\n        currentComponent: eve.target.value\n      };\n    });\n  };\n\n  let drawCurrentComponent;\n\n  switch (state.currentComponent) {\n    case 'Detect Pangram':\n      drawCurrentComponent = /*#__PURE__*/_jsxDEV(DetectPangram, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 36\n      }, this);\n      break;\n\n    case 'Detect Pangram 2':\n      drawCurrentComponent = /*#__PURE__*/_jsxDEV(DetectPangram, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 36\n      }, this);\n      break;\n\n    default:\n      alert('Houston we have a problem');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: onChangeHandle,\n      value: state.currentComponent,\n      children: [\" \", state.optionArray.map((el, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: el,\n        children: [\" \", el, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), \" \", drawCurrentComponent, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this);\n}\n\n_s(App, \"2/eSVXfk2V5ZKttKXeUPXMa6Sd8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/davi/Documents/projects/codewars/src/App.js"],"names":["useEffect","useState","DetectPangram","App","initialState","optionArray","currentComponent","state","setState","onChangeHandle","eve","prevState","target","value","drawCurrentComponent","alert","map","el","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,0CAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAMC,YAAY,GAAG;AACjBC,IAAAA,WAAW,EAAE,CACT,gBADS,EAET,kBAFS,CADI;AAKjBC,IAAAA,gBAAgB,EAAE;AALD,GAArB;AAQA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACG,YAAD,CAAlC,CATW,CAWX;;AAEA,QAAMK,cAAc,GAAIC,GAAD,IAAS;AAC5BF,IAAAA,QAAQ,CAACG,SAAS,IAAI;AAClB,aAAO,EACH,GAAGA,SADA;AAEHL,QAAAA,gBAAgB,EAAEI,GAAG,CAACE,MAAJ,CAAWC;AAF1B,OAAP;AAIH,KALO,CAAR;AAMH,GAPD;;AASA,MAAIC,oBAAJ;;AAEA,UAAQP,KAAK,CAACD,gBAAd;AACI,SAAK,gBAAL;AACIQ,MAAAA,oBAAoB,gBAAG,QAAE,aAAF;AAAA;AAAA;AAAA;AAAA,cAAvB;AACA;;AACJ,SAAK,kBAAL;AACIA,MAAAA,oBAAoB,gBAAG,QAAE,aAAF;AAAA;AAAA;AAAA;AAAA,cAAvB;AACA;;AACJ;AACIC,MAAAA,KAAK,CAAC,2BAAD,CAAL;AARR;;AAWA,sBAAS;AACD,IAAA,SAAS,EAAG,YADX;AAAA,4BAEL;AACO,MAAA,QAAQ,EAAKN,cADpB;AAEA,MAAA,KAAK,EAAKF,KAAK,CAACD,gBAFhB;AAAA,sBAGIC,KAAK,CAACF,WAAN,CAAkBW,GAAlB,CAAsB,CAACC,EAAD,EAAKC,KAAL,kBAClB;AACO,QAAA,KAAK,EAAKD,EADjB;AAAA,wBAEoBA,EAFpB;AAAA,SAEQC,KAFR;AAAA;AAAA;AAAA;AAAA,cADJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK,OAWUJ,oBAXV;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAcC;;GAjDIX,G;;KAAAA,G;AAmDL,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\nimport DetectPangram from './components/DetectPangram/DetectPangram';\n\nfunction App() {\n    const initialState = {\n        optionArray: [\n            'Detect Pangram',\n            'Detect Pangram 2',\n        ],\n        currentComponent: 'Detect Pangram'\n    };\n\n    const [state, setState] = useState(initialState);\n\n    // useEffect(() => console.log(state), [state]);\n\n    const onChangeHandle = (eve) => {\n        setState(prevState => {\n            return {\n                ...prevState,\n                currentComponent: eve.target.value\n            }\n        })\n    }\n\n    let drawCurrentComponent;\n\n    switch (state.currentComponent) {\n        case 'Detect Pangram':\n            drawCurrentComponent = < DetectPangram / > ;\n            break;\n        case 'Detect Pangram 2':\n            drawCurrentComponent = < DetectPangram / > ;\n            break;\n        default:\n            alert('Houston we have a problem')\n    }\n\n    return ( <\n        div className = 'appWrapper' >\n        <\n        select onChange = { onChangeHandle }\n        value = { state.currentComponent } > {\n            state.optionArray.map((el, index) =>\n                <\n                option value = { el }\n                key = { index } > { el } <\n                /option>)\n            } <\n            /select> { drawCurrentComponent } < /\n            div >\n        );\n    }\n\n    export default App;"]},"metadata":{},"sourceType":"module"}