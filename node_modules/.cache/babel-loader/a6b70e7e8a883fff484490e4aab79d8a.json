{"ast":null,"code":"var _jsxFileName = \"/Users/davi/Documents/projects/codewars/src/components/DetectPangram/DetectPangram.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './DetectPangram.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetectPangram = () => {\n  _s();\n\n  const [currentValue, setCurrentValue] = useState('');\n  const [drawAnswer, setDrawAnswer] = useState('');\n\n  const onChangeStringHandle = eve => setCurrentValue(eve.target.value);\n\n  const checkStringHandle = () => {\n    const alphabetArray = 'absdefghijklmnopqrstuvwxyz'.split('');\n    let tempStr = currentValue.split(' ').join('').toLowerCase();\n    let flag = true;\n    let counter = 0;\n    alphabetArray.forEach(el => {\n      if (tempStr.indexOf(el, 0) < 0) {\n        return flag = false;\n      } else {\n        counter++;\n      }\n    });\n    flag = counter === 26 ? true : false;\n    return flag ? setDrawAnswer('Pangram') : setDrawAnswer('No Pangram');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DETECT PANGRAM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A pangram is a sentence that contains every single letter of the alphabet at least once. For example, the sentence \\\"The quick brown fox jumps over the lazy dog\\\" is a pangram, because it uses the letters A-Z at least once (case is irrelevant). Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currentValue,\n        onChange: onChangeStringHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkStringHandle,\n      children: \"check a string\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Answer: \", drawAnswer, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetectPangram, \"JVP+OpHz7cAkFVQZT+eB1vqz9Gg=\");\n\n_c = DetectPangram;\nexport default DetectPangram;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetectPangram\");","map":{"version":3,"sources":["/Users/davi/Documents/projects/codewars/src/components/DetectPangram/DetectPangram.js"],"names":["React","useState","classes","DetectPangram","currentValue","setCurrentValue","drawAnswer","setDrawAnswer","onChangeStringHandle","eve","target","value","checkStringHandle","alphabetArray","split","tempStr","join","toLowerCase","flag","counter","forEach","el","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMO,oBAAoB,GAAIC,GAAD,IAASJ,eAAe,CAACI,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAArD;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,UAAMC,aAAa,GAAG,6BAA6BC,KAA7B,CAAmC,EAAnC,CAAtB;AACA,QAAIC,OAAO,GAAGX,YAAY,CAACU,KAAb,CAAmB,GAAnB,EAAwBE,IAAxB,CAA6B,EAA7B,EAAiCC,WAAjC,EAAd;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,OAAO,GAAG,CAAd;AAEAN,IAAAA,aAAa,CAACO,OAAd,CAAsBC,EAAE,IAAI;AACxB,UAAIN,OAAO,CAACO,OAAR,CAAgBD,EAAhB,EAAoB,CAApB,IAAyB,CAA7B,EAAgC;AAC5B,eAAOH,IAAI,GAAG,KAAd;AACH,OAFD,MAEO;AACHC,QAAAA,OAAO;AACV;AACJ,KAND;AAOAD,IAAAA,IAAI,GAAGC,OAAO,KAAK,EAAZ,GAAiB,IAAjB,GAAwB,KAA/B;AACA,WAAOD,IAAI,GAAGX,aAAa,CAAC,SAAD,CAAhB,GAA8BA,aAAa,CAAC,YAAD,CAAtD;AACH,GAfD;;AAiBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,6BACI;AACI,QAAA,KAAK,EAAEH,YADX;AAEI,QAAA,QAAQ,EAAEI;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AACI,MAAA,OAAO,EAAEI,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAkBI;AAAA,6BAAaN,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CA5CD;;GAAMH,a;;KAAAA,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport classes from './DetectPangram.module.css';\n\n\nconst DetectPangram = () => {\n    const [currentValue, setCurrentValue] = useState('');\n    const [drawAnswer, setDrawAnswer] = useState('');\n    const onChangeStringHandle = (eve) => setCurrentValue(eve.target.value);\n\n    const checkStringHandle = () => {\n        const alphabetArray = 'absdefghijklmnopqrstuvwxyz'.split('');\n        let tempStr = currentValue.split(' ').join('').toLowerCase();\n        let flag = true;\n        let counter = 0;\n\n        alphabetArray.forEach(el => {\n            if (tempStr.indexOf(el, 0) < 0) {\n                return flag = false;\n            } else {\n                counter++;\n            }\n        })\n        flag = counter === 26 ? true : false;\n        return flag ? setDrawAnswer('Pangram') : setDrawAnswer('No Pangram');\n    }\n\n    return (\n        <div>\n            <h1>DETECT PANGRAM</h1>\n            <p>\n                A pangram is a sentence that contains every single letter of the alphabet at least once. For example, the sentence \"The quick brown fox jumps over the lazy dog\" is a pangram, because it uses the letters A-Z at least once (case is irrelevant).\n\n                Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation.\n            </p>\n            <label>\n                <input\n                    value={currentValue}\n                    onChange={onChangeStringHandle}\n                />\n            </label>\n            <button\n                onClick={checkStringHandle}\n            >\n                check a string\n            </button>\n            <h2>Answer: {drawAnswer} </h2>\n        </div >\n    )\n}\n\nexport default DetectPangram;"]},"metadata":{},"sourceType":"module"}