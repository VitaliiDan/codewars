{"ast":null,"code":"var _jsxFileName = \"/Users/davi/Documents/projects/codewars/src/components/DetectPangram/DetectPangram.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport classes from './DetectPangram.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetectPangram = () => {\n  _s();\n\n  const [currentValue, setCurrentValue] = useState('');\n\n  const onChangeStringHandle = eve => setCurrentValue(eve.target.value);\n\n  const checkStringHandle = () => {\n    let tempStr = currentValue.split(' ').join('').toLowerCase();\n    let flag = true;\n\n    while (tempStr.length > 0) {\n      // const checkLetter = tempStr[0];\n      if (tempStr.indexOf(tempStr[0], 1) < 0) {\n        flag = false;\n        break;\n      } else {\n        tempStr = tempStr.slice(1);\n      }\n    }\n\n    console.log(flag);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DETECT PANGRAM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A pangram is a sentence that contains every single letter of the alphabet at least once. For example, the sentence \\\"The quick brown fox jumps over the lazy dog\\\" is a pangram, because it uses the letters A-Z at least once (case is irrelevant). Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: currentValue,\n        onChange: onChangeStringHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: checkStringHandle,\n      children: \"heck a string\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DetectPangram, \"V7gd+0hAK8kJ0ho5c4c1GMVRkhY=\");\n\n_c = DetectPangram;\nexport default DetectPangram;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetectPangram\");","map":{"version":3,"sources":["/Users/davi/Documents/projects/codewars/src/components/DetectPangram/DetectPangram.js"],"names":["React","useEffect","useState","classes","DetectPangram","currentValue","setCurrentValue","onChangeStringHandle","eve","target","value","checkStringHandle","tempStr","split","join","toLowerCase","flag","length","indexOf","slice","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAGA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMK,oBAAoB,GAAIC,GAAD,IAASF,eAAe,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAArD;;AAEA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAGP,YAAY,CAACQ,KAAb,CAAmB,GAAnB,EAAwBC,IAAxB,CAA6B,EAA7B,EAAiCC,WAAjC,EAAd;AACA,QAAIC,IAAI,GAAG,IAAX;;AACA,WAAOJ,OAAO,CAACK,MAAR,GAAiB,CAAxB,EAA2B;AACvB;AACA,UAAIL,OAAO,CAACM,OAAR,CAAgBN,OAAO,CAAC,CAAD,CAAvB,EAA4B,CAA5B,IAAiC,CAArC,EAAwC;AACpCI,QAAAA,IAAI,GAAG,KAAP;AACA;AACH,OAHD,MAGO;AACHJ,QAAAA,OAAO,GAAGA,OAAO,CAACO,KAAR,CAAc,CAAd,CAAV;AACH;AACJ;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACH,GAbD;;AAeA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,6BACI;AACI,QAAA,KAAK,EAAEX,YADX;AAEI,QAAA,QAAQ,EAAEE;AAFd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AACI,MAAA,OAAO,EAAEI,iBADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAzCD;;GAAMP,a;;KAAAA,a;AA2CN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classes from './DetectPangram.module.css';\n\n\nconst DetectPangram = () => {\n    const [currentValue, setCurrentValue] = useState('');\n\n    const onChangeStringHandle = (eve) => setCurrentValue(eve.target.value);\n\n    const checkStringHandle = () => {\n        let tempStr = currentValue.split(' ').join('').toLowerCase();\n        let flag = true;\n        while (tempStr.length > 0) {\n            // const checkLetter = tempStr[0];\n            if (tempStr.indexOf(tempStr[0], 1) < 0) {\n                flag = false;\n                break;\n            } else {\n                tempStr = tempStr.slice(1);\n            }\n        }\n        console.log(flag);\n    }\n\n    return (\n        <div>\n            <h1>DETECT PANGRAM</h1>\n            <p>\n                A pangram is a sentence that contains every single letter of the alphabet at least once. For example, the sentence \"The quick brown fox jumps over the lazy dog\" is a pangram, because it uses the letters A-Z at least once (case is irrelevant).\n\n                Given a string, detect whether or not it is a pangram. Return True if it is, False if not. Ignore numbers and punctuation.\n            </p>\n            <label>\n                <input\n                    value={currentValue}\n                    onChange={onChangeStringHandle}\n                />\n            </label>\n            <button\n                onClick={checkStringHandle}\n            >\n                heck a string\n            </button>\n        </div >\n    )\n}\n\nexport default DetectPangram;"]},"metadata":{},"sourceType":"module"}